{"repository_name":"github.com/Blacksmoke16/crylog","body":"# Crylog\n[![Build Status](https://travis-ci.org/Blacksmoke16/crylog.svg?branch=master)](https://travis-ci.org/Blacksmoke16/crylog)\n[![Latest release](https://img.shields.io/github/release/Blacksmoke16/crylog.svg?style=flat-square)](https://github.com/Blacksmoke16/crylog/releases)\n\nFlexible logging framework based on [Monolog](https://github.com/Seldaek/monolog).\n\n## Roadmap\nCurrently, the base functionality is complete.  \n\nIf someones wishes to make a PR and \"own\" a specific handler (or formatter/processor), I would welcome the PR.  Maintainers, with their handlers, will be listed at the bottom.  Otherwise, feel free to create an issue.\n\n## Core Concepts\n\n- Logger - An instance of `Crylog::Logger` that logs messages, optionally with context. \n- Handler - Writes the log message to somewhere/something.\n- Processor - Adds metadata to each logged message.\n- Formatter - Determines how a logged message appears.\n\n### Severity\n\n`Crylog` uses the log levels as described in [RFC 5424](https://tools.ietf.org/html/rfc5424#section-6.2.1):\n\n- Emergency: system is unusable\n- Alert: action must be taken immediately\n- Critical: critical conditions\n- Error: error conditions\n- Warning: warning conditions\n- Notice: normal but significant condition\n- Informational: informational messages\n- Debug: debug-level messages\n\nConvenience methods are defined for each i.e. `logger.info`, `logger.alert`, etc.\n\n### Additional Documentation\n\n[Documentation](./docs)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crylog:\n    github: Blacksmoke16/crylog\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/Blacksmoke16/crylog/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Blacksmoke16](https://github.com/Blacksmoke16) Blacksmoke16 - creator, maintainer\n\n### Handlers\n\nThose that created/maintain handlers for a specific service/system will be listed here.\n","program":{"html_id":"github.com/Blacksmoke16/crylog/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Blacksmoke16/crylog","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog","path":"Crylog.html","kind":"module","full_name":"Crylog","name":"Crylog","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"logger.cr","line_number":1,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr"},{"filename":"message.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr"},{"filename":"registry.cr","line_number":1,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr"},{"filename":"crylog.cr","line_number":12,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A flexible logging framework for Crystal.","summary":"<p>A flexible logging framework for Crystal.</p>","class_methods":[{"id":"configure(&block:Registry.class->Nil):Nil-class-method","html_id":"configure(&amp;block:Registry.class-&gt;Nil):Nil-class-method","name":"configure","doc":"Configures `Crylog`.  Defines the logger instances.","summary":"<p>Configures <code><a href=\"Crylog.html\">Crylog</a></code>.</p>","abstract":false,"args":[],"args_string":"(&block : <span class=\"t\">Registry</span>.<span class=\"k\">class</span> -> Nil) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr#L35","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Registry.class -> Nil)"},"return_type":"Nil","visibility":"Public","body":"yield Registry"}},{"id":"default_channel:String-class-method","html_id":"default_channel:String-class-method","name":"default_channel","doc":"The channel to use when no channel is supplied to `.logger`.","summary":"<p>The channel to use when no channel is supplied to <code><a href=\"Crylog.html#logger(channel:String=Crylog.default_channel):Crylog::Logger-class-method\">.logger</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr#L29","def":{"name":"default_channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@default_channel"}},{"id":"default_channel=(default_channel:String)-class-method","html_id":"default_channel=(default_channel:String)-class-method","name":"default_channel=","doc":"The channel to use when no channel is supplied to `.logger`.","summary":"<p>The channel to use when no channel is supplied to <code><a href=\"Crylog.html#logger(channel:String=Crylog.default_channel):Crylog::Logger-class-method\">.logger</a></code>.</p>","abstract":false,"args":[{"name":"default_channel","doc":null,"default_value":"","external_name":"default_channel","restriction":"String"}],"args_string":"(default_channel : String)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr#L33","def":{"name":"default_channel=","args":[{"name":"default_channel","doc":null,"default_value":"","external_name":"default_channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_channel = default_channel"}},{"id":"logger(channel:String=Crylog.default_channel):Crylog::Logger-class-method","html_id":"logger(channel:String=Crylog.default_channel):Crylog::Logger-class-method","name":"logger","doc":"Returns a `Crylog::Logger` for the provided *channel*.","summary":"<p>Returns a <code><a href=\"Crylog/Logger.html\">Crylog::Logger</a></code> for the provided <em>channel</em>.</p>","abstract":false,"args":[{"name":"channel","doc":null,"default_value":"Crylog.default_channel","external_name":"channel","restriction":"String"}],"args_string":"(channel : String = <span class=\"t\">Crylog</span>.default_channel) : Crylog::Logger","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr#L30","def":{"name":"logger","args":[{"name":"channel","doc":null,"default_value":"Crylog.default_channel","external_name":"channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crylog::Logger","visibility":"Public","body":"Registry.loggers[channel]? || (raise(\"Requested '#{channel}' logger instance has not been registered.\"))"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Context","path":"Crylog/Context.html","kind":"alias","full_name":"Crylog::Context","name":"Context","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crylog.cr","line_number":14,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":true,"aliased":"(Array(Crylog::Context) | Bool | Float32 | Float64 | Hash(String, Crylog::Context) | Int16 | Int32 | Int64 | Int8 | String | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"The possible types the value could be in `Crylog::Message#context` and `Crylog::Message#extra` hashes.","summary":"<p>The possible types the value could be in <code><a href=\"../Crylog/Message.html#context:Hash(String,Crylog::Context)-instance-method\">Crylog::Message#context</a></code> and <code><a href=\"../Crylog/Message.html#extra:Hash(String,Crylog::Context)-instance-method\">Crylog::Message#extra</a></code> hashes.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/CrylogLogger","path":"Crylog/CrylogLogger.html","kind":"class","full_name":"Crylog::CrylogLogger","name":"CrylogLogger","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Logger","kind":"class","full_name":"Logger","name":"Logger"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Logger","kind":"class","full_name":"Logger","name":"Logger"},{"html_id":"github.com/Blacksmoke16/crylog/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crylog_logger.cr","line_number":23,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Compatibility class to support using `Crylog` with the `::Logger` type.\n\nDefines `Crylog::Logger` logging methods as well as maps `::Logger::Severity` methods to `Crylog::Severity` methods.\n\n```\nCrylog.configure do |registry|\n  registry.register \"main\" do |logger|\n    logger.handlers = [\n      Crylog::Handlers::IOHandler.new STDOUT,\n    ] of Crylog::Handlers::LogHandler\n  end\nend\n\none : ::Logger = Logger.new STDOUT\ntwo : ::Logger = Crylog::CrylogLogger.new\n\none.warn \"FOO\" # => W, [2019-10-15 19:17:26 -04:00 #19986]  WARN -- : FOO\ntwo.warn \"FOO\" # => [2019-10-15T23:17:26.042287000Z] main.WARNING: FOO\n```","summary":"<p>Compatibility class to support using <code><a href=\"../Crylog.html\">Crylog</a></code> with the <code>::Logger</code> type.</p>","class_methods":[],"constructors":[{"id":"new(channel:String=Crylog.default_channel)-class-method","html_id":"new(channel:String=Crylog.default_channel)-class-method","name":"new","doc":"Use the `Crylog::Logger` with the provided *channel*.","summary":"<p>Use the <code><a href=\"../Crylog/Logger.html\">Crylog::Logger</a></code> with the provided <em>channel</em>.</p>","abstract":false,"args":[{"name":"channel","doc":null,"default_value":"Crylog.default_channel","external_name":"channel","restriction":"String"}],"args_string":"(channel : String = <span class=\"t\">Crylog</span>.default_channel)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L30","def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"Crylog.default_channel","external_name":"channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alert(&:->Crylog::MsgType):Nil-instance-method","html_id":"alert(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"alert","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Alert` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Alert\">Crylog::Severity::Alert</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"alert","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.alert(yield)"}},{"id":"alert(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"alert(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"alert","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Alert` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Alert\">Crylog::Severity::Alert</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"alert","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.alert(message, context)"}},{"id":"critical(&:->Crylog::MsgType):Nil-instance-method","html_id":"critical(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"critical","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"critical","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.critical(yield)"}},{"id":"critical(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"critical(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"critical","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"critical","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.critical(message, context)"}},{"id":"debug(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"debug(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"debug","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"debug","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.debug(message, context)"}},{"id":"debug(&:->Crylog::MsgType):Nil-instance-method","html_id":"debug(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"debug","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"debug","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.debug(yield)"}},{"id":"emergency(&:->Crylog::MsgType):Nil-instance-method","html_id":"emergency(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"emergency","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Emergency` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Emergency\">Crylog::Severity::Emergency</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"emergency","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.emergency(yield)"}},{"id":"emergency(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"emergency(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"emergency","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Emergency` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Emergency\">Crylog::Severity::Emergency</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"emergency","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.emergency(message, context)"}},{"id":"error(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"error(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"error","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Error` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Error\">Crylog::Severity::Error</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.error(message, context)"}},{"id":"error(&:->Crylog::MsgType):Nil-instance-method","html_id":"error(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"error","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Error` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Error\">Crylog::Severity::Error</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.error(yield)"}},{"id":"fatal(&:->Crylog::MsgType):Nil-instance-method","html_id":"fatal(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"fatal","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"fatal","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.critical(yield)"}},{"id":"fatal(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"fatal(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"fatal","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"fatal","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.critical(message, context)"}},{"id":"info(&:->Crylog::MsgType):Nil-instance-method","html_id":"info(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"info","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Info` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Info\">Crylog::Severity::Info</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"info","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.info(yield)"}},{"id":"info(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"info(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"info","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Info` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Info\">Crylog::Severity::Info</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.info(message, context)"}},{"id":"notice(&:->Crylog::MsgType):Nil-instance-method","html_id":"notice(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"notice","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Notice` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Notice\">Crylog::Severity::Notice</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"notice","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.notice(yield)"}},{"id":"notice(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"notice(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"notice","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Notice` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Notice\">Crylog::Severity::Notice</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"notice","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.notice(message, context)"}},{"id":"unknown(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"unknown(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"unknown","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"unknown","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.debug(message, context)"}},{"id":"unknown(&:->Crylog::MsgType):Nil-instance-method","html_id":"unknown(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"unknown","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"unknown","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.debug(yield)"}},{"id":"warn(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"warn(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"warn","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"warn","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.warning(message, context)"}},{"id":"warn(&:->Crylog::MsgType):Nil-instance-method","html_id":"warn(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"warn","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L50","def":{"name":"warn","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.warning(yield)"}},{"id":"warning(&:->Crylog::MsgType):Nil-instance-method","html_id":"warning(&amp;:-&gt;Crylog::MsgType):Nil-instance-method","name":"warning","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.\nBlock is evaluated at least once due to https://github.com/crystal-lang/crystal/issues/8485.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(& :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"warning","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"@logger.warning(yield)"}},{"id":"warning(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"warning(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"warning","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L36","def":{"name":"warning","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@logger.warning(message, context)"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog_logger.cr#L27","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @logger.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","path":"Crylog/Formatters.html","kind":"module","full_name":"Crylog::Formatters","name":"Formatters","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"formatters/formattable.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formattable.cr"},{"filename":"formatters/formatter.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formatter.cr"},{"filename":"formatters/json_formatter.cr","line_number":1,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr"},{"filename":"formatters/line_formatter.cr","line_number":1,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Controls how a `Crylog::Message` gets serialized when handled.","summary":"<p>Controls how a <code><a href=\"../Crylog/Message.html\">Crylog::Message</a></code> gets serialized when handled.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/Formattable","path":"Crylog/Formatters/Formattable.html","kind":"module","full_name":"Crylog::Formatters::Formattable","name":"Formattable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"formatters/formattable.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formattable.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"}],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","kind":"module","full_name":"Crylog::Formatters","name":"Formatters"},"doc":"Represents handlers that can have custom formatters.","summary":"<p>Represents handlers that can have custom formatters.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"formatter:Crylog::Formatters::LogFormatters-instance-method","html_id":"formatter:Crylog::Formatters::LogFormatters-instance-method","name":"formatter","doc":"Returns the `Crylog::Formatters::LogFormatter` defined on `self`, or `#default_formatter` if none was set.","summary":"<p>Returns the <code><a href=\"../../Crylog/Formatters/LogFormatter.html\">Crylog::Formatters::LogFormatter</a></code> defined on <code>self</code>, or <code>#default_formatter</code> if none was set.</p>","abstract":false,"args":[],"args_string":" : Crylog::Formatters::LogFormatters","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formattable.cr#L7","def":{"name":"formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crylog::Formatters::LogFormatters","visibility":"Public","body":"(f = @formatter) ? f : default_formatter"}},{"id":"formatter=(formatter:Crylog::Formatters::LogFormatters?)-instance-method","html_id":"formatter=(formatter:Crylog::Formatters::LogFormatters?)-instance-method","name":"formatter=","doc":"The formatter to use, defaults to `Crylog::Formatters::LineFormatter`.","summary":"<p>The formatter to use, defaults to <code><a href=\"../../Crylog/Formatters/LineFormatter.html\">Crylog::Formatters::LineFormatter</a></code>.</p>","abstract":false,"args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":"Crylog::Formatters::LogFormatters | ::Nil"}],"args_string":"(formatter : Crylog::Formatters::LogFormatters?)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formattable.cr#L6","def":{"name":"formatter=","args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":"Crylog::Formatters::LogFormatters | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatter = formatter"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/JsonFormatter","path":"Crylog/Formatters/JsonFormatter.html","kind":"struct","full_name":"Crylog::Formatters::JsonFormatter","name":"JsonFormatter","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatter","kind":"struct","full_name":"Crylog::Formatters::LogFormatter","name":"LogFormatter"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatter","kind":"struct","full_name":"Crylog::Formatters::LogFormatter","name":"LogFormatter"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"formatters/json_formatter.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","kind":"module","full_name":"Crylog::Formatters","name":"Formatters"},"doc":"Formats the message as a JSON string.","summary":"<p>Formats the message as a JSON string.</p>","class_methods":[],"constructors":[{"id":"new(pretty_print:Bool=false)-class-method","html_id":"new(pretty_print:Bool=false)-class-method","name":"new","doc":"Instantiates `self`, outputting a pretty JSON string if *pretty_print*.","summary":"<p>Instantiates <code>self</code>, outputting a pretty JSON string if <em>pretty_print</em>.</p>","abstract":false,"args":[{"name":"pretty_print","doc":null,"default_value":"false","external_name":"pretty_print","restriction":"Bool"}],"args_string":"(pretty_print : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr#L8","def":{"name":"new","args":[{"name":"pretty_print","doc":null,"default_value":"false","external_name":"pretty_print","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pretty_print)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(message:Crylog::Message):String-instance-method","html_id":"call(message:Crylog::Message):String-instance-method","name":"call","doc":"Consumes a *message* and returns a formatted string representation of it.","summary":"<p>Consumes a <em>message</em> and returns a formatted string representation of it.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr#L11","def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@pretty_print ? message.to_pretty_json : message.to_json"}},{"id":"pretty_print:Bool-instance-method","html_id":"pretty_print:Bool-instance-method","name":"pretty_print","doc":"Whether the JSON string should be pretty printed.","summary":"<p>Whether the JSON string should be pretty printed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr#L7","def":{"name":"pretty_print","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@pretty_print"}},{"id":"pretty_print=(pretty_print:Bool)-instance-method","html_id":"pretty_print=(pretty_print:Bool)-instance-method","name":"pretty_print=","doc":"Whether the JSON string should be pretty printed.","summary":"<p>Whether the JSON string should be pretty printed.</p>","abstract":false,"args":[{"name":"pretty_print","doc":null,"default_value":"","external_name":"pretty_print","restriction":"Bool"}],"args_string":"(pretty_print : Bool)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/json_formatter.cr#L11","def":{"name":"pretty_print=","args":[{"name":"pretty_print","doc":null,"default_value":"","external_name":"pretty_print","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pretty_print = pretty_print"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LineFormatter","path":"Crylog/Formatters/LineFormatter.html","kind":"struct","full_name":"Crylog::Formatters::LineFormatter","name":"LineFormatter","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatter","kind":"struct","full_name":"Crylog::Formatters::LogFormatter","name":"LogFormatter"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatter","kind":"struct","full_name":"Crylog::Formatters::LogFormatter","name":"LogFormatter"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"formatters/line_formatter.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","kind":"module","full_name":"Crylog::Formatters","name":"Formatters"},"doc":"Formats the message to fit on a single line.","summary":"<p>Formats the message to fit on a single line.</p>","class_methods":[],"constructors":[{"id":"new(allow_line_breaks:Bool=false)-class-method","html_id":"new(allow_line_breaks:Bool=false)-class-method","name":"new","doc":"Instantiates `self`, stripping out out line breaks unless *allow_line_breaks*.","summary":"<p>Instantiates <code>self</code>, stripping out out line breaks unless <em>allow_line_breaks</em>.</p>","abstract":false,"args":[{"name":"allow_line_breaks","doc":null,"default_value":"false","external_name":"allow_line_breaks","restriction":"Bool"}],"args_string":"(allow_line_breaks : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr#L8","def":{"name":"new","args":[{"name":"allow_line_breaks","doc":null,"default_value":"false","external_name":"allow_line_breaks","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(allow_line_breaks)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_line_breaks:Bool-instance-method","html_id":"allow_line_breaks:Bool-instance-method","name":"allow_line_breaks","doc":"Whether line breaks within a message should be stripped out.","summary":"<p>Whether line breaks within a message should be stripped out.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr#L7","def":{"name":"allow_line_breaks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_line_breaks"}},{"id":"allow_line_breaks=(allow_line_breaks:Bool)-instance-method","html_id":"allow_line_breaks=(allow_line_breaks:Bool)-instance-method","name":"allow_line_breaks=","doc":"Whether line breaks within a message should be stripped out.","summary":"<p>Whether line breaks within a message should be stripped out.</p>","abstract":false,"args":[{"name":"allow_line_breaks","doc":null,"default_value":"","external_name":"allow_line_breaks","restriction":"Bool"}],"args_string":"(allow_line_breaks : Bool)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr#L11","def":{"name":"allow_line_breaks=","args":[{"name":"allow_line_breaks","doc":null,"default_value":"","external_name":"allow_line_breaks","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@allow_line_breaks = allow_line_breaks"}},{"id":"call(message:Crylog::Message):String-instance-method","html_id":"call(message:Crylog::Message):String-instance-method","name":"call","doc":"Consumes a *message* and returns a formatted string representation of it.","summary":"<p>Consumes a <em>message</em> and returns a formatted string representation of it.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/line_formatter.cr#L11","def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"sdatetime = message.datetime.to_rfc3339\nschannel = message.channel\nsseverity = message.severity.to_s\nsmessage = message.message? ? replace_line_breaks(message.message) : nil\nscontext = message.context? ? message.context.to_json : nil\nsextra = message.extra? ? message.extra.to_json : nil\nstrlen = (((((10 + sdatetime.bytesize) + schannel.bytesize) + sseverity.bytesize) + (smessage.try(&.bytesize) || 0)) + (scontext.try(&.bytesize) || 0)) + (sextra.try(&.bytesize) || 0)\nString.build(strlen) do |str|\n  (((str << '[') << sdatetime) << ']') << ' '\n  (((str << schannel) << '.') << sseverity) << ':'\n  if smessage\n    (str << ' ') << smessage\n  end\n  if scontext\n    (str << ' ') << scontext\n  end\n  if sextra\n    (str << ' ') << sextra\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatter","path":"Crylog/Formatters/LogFormatter.html","kind":"struct","full_name":"Crylog::Formatters::LogFormatter","name":"LogFormatter","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"formatters/formatter.cr","line_number":6,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formatter.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/JsonFormatter","kind":"struct","full_name":"Crylog::Formatters::JsonFormatter","name":"JsonFormatter"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LineFormatter","kind":"struct","full_name":"Crylog::Formatters::LineFormatter","name":"LineFormatter"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","kind":"module","full_name":"Crylog::Formatters","name":"Formatters"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formatter.cr#L6","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"call(message:Message):String-instance-method","html_id":"call(message:Message):String-instance-method","name":"call","doc":"Consumes a *message* and returns a formatted string representation of it.","summary":"<p>Consumes a <em>message</em> and returns a formatted string representation of it.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Message"}],"args_string":"(message : Message) : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formatter.cr#L8","def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/LogFormatters","path":"Crylog/Formatters/LogFormatters.html","kind":"alias","full_name":"Crylog::Formatters::LogFormatters","name":"LogFormatters","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"formatters/formatter.cr","line_number":4,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/formatters/formatter.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":true,"aliased":"(Crylog::Formatters::LogFormatter | Proc(Crylog::Message, String))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters","kind":"module","full_name":"Crylog::Formatters","name":"Formatters"},"doc":"The possible types of a Formatter.","summary":"<p>The possible types of a Formatter.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","path":"Crylog/Handlers.html","kind":"module","full_name":"Crylog::Handlers","name":"Handlers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"handlers/handler.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/handler.cr"},{"filename":"handlers/abstract_handler.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr"},{"filename":"handlers/processing_handler.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/processing_handler.cr"},{"filename":"handlers/io_handler.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/io_handler.cr"},{"filename":"handlers/noop_handler.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/noop_handler.cr"},{"filename":"handlers/null_handler.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/null_handler.cr"},{"filename":"handlers/test_handler.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/test_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"A handler is a struct that handles the actual writing/sending of the logged message; such as a file, STDOUT, Sentry, Greylog etc.","summary":"<p>A handler is a struct that handles the actual writing/sending of the logged message; such as a file, STDOUT, Sentry, Greylog etc.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","path":"Crylog/Handlers/AbstractLogHandler.html","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/abstract_handler.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Implements *severity* and *bubble* functionality.","summary":"<p>Implements <em>severity</em> and <em>bubble</em> functionality.</p>","class_methods":[],"constructors":[{"id":"new(severity:Crylog::Severity=Crylog::Severity::Debug,bubble:Bool=true)-class-method","html_id":"new(severity:Crylog::Severity=Crylog::Severity::Debug,bubble:Bool=true)-class-method","name":"new","doc":"Initializes a log handler that will handle any message with a severity greater than or equal to *severity*.\n\n*bubble* determines if messages should continue on to the next handler.","summary":"<p>Initializes a log handler that will handle any message with a severity greater than or equal to <em>severity</em>.</p>","abstract":false,"args":[{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"},{"name":"bubble","doc":null,"default_value":"true","external_name":"bubble","restriction":"Bool"}],"args_string":"(severity : Crylog::Severity = <span class=\"t\">Crylog</span><span class=\"t\">::</span><span class=\"t\">Severity</span><span class=\"t\">::</span><span class=\"t\">Debug</span>, bubble : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L15","def":{"name":"new","args":[{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"},{"name":"bubble","doc":null,"default_value":"true","external_name":"bubble","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(severity, bubble)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bubble:Bool-instance-method","html_id":"bubble:Bool-instance-method","name":"bubble","doc":"Whether the message should be handled by the next handler.","summary":"<p>Whether the message should be handled by the next handler.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L12","def":{"name":"bubble","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@bubble"}},{"id":"bubble=(bubble:Bool)-instance-method","html_id":"bubble=(bubble:Bool)-instance-method","name":"bubble=","doc":"Whether the message should be handled by the next handler.","summary":"<p>Whether the message should be handled by the next handler.</p>","abstract":false,"args":[{"name":"bubble","doc":null,"default_value":"","external_name":"bubble","restriction":"Bool"}],"args_string":"(bubble : Bool)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L16","def":{"name":"bubble=","args":[{"name":"bubble","doc":null,"default_value":"","external_name":"bubble","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bubble = bubble"}},{"id":"handles?(message:Crylog::Message):Bool-instance-method","html_id":"handles?(message:Crylog::Message):Bool-instance-method","name":"handles?","doc":"Determines if this handler is able to handle *message*.","summary":"<p>Determines if this handler is able to handle <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L18","def":{"name":"handles?","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"message.severity >= @severity"}},{"id":"severity:Crylog::Severity-instance-method","html_id":"severity:Crylog::Severity-instance-method","name":"severity","doc":"The minimum *severity* that this handler should handle.","summary":"<p>The minimum <em>severity</em> that this handler should handle.</p>","abstract":false,"args":[],"args_string":" : Crylog::Severity","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L9","def":{"name":"severity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crylog::Severity","visibility":"Public","body":"@severity"}},{"id":"severity=(severity:Crylog::Severity)-instance-method","html_id":"severity=(severity:Crylog::Severity)-instance-method","name":"severity=","doc":"The minimum *severity* that this handler should handle.","summary":"<p>The minimum <em>severity</em> that this handler should handle.</p>","abstract":false,"args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":"Crylog::Severity"}],"args_string":"(severity : Crylog::Severity)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/abstract_handler.cr#L13","def":{"name":"severity=","args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":"Crylog::Severity"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@severity = severity"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/IOHandler","path":"Crylog/Handlers/IOHandler.html","kind":"struct","full_name":"Crylog::Handlers::IOHandler","name":"IOHandler","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/Processable","kind":"module","full_name":"Crylog::Processors::Processable","name":"Processable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/Formattable","kind":"module","full_name":"Crylog::Formatters::Formattable","name":"Formattable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/io_handler.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/io_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Allows writing to any IO; files, STDOUT, etc.","summary":"<p>Allows writing to any IO; files, STDOUT, etc.</p>","class_methods":[],"constructors":[{"id":"new(io:IO,lock:Bool=false,severity:Crylog::Severity=Crylog::Severity::Debug,bubble:Bool=true)-class-method","html_id":"new(io:IO,lock:Bool=false,severity:Crylog::Severity=Crylog::Severity::Debug,bubble:Bool=true)-class-method","name":"new","doc":"Writes the message to the given *io*.  If *lock*, and *io* is a file, locks the file before writing.","summary":"<p>Writes the message to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"lock","doc":null,"default_value":"false","external_name":"lock","restriction":"Bool"},{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"},{"name":"bubble","doc":null,"default_value":"true","external_name":"bubble","restriction":"Bool"}],"args_string":"(io : IO, lock : Bool = <span class=\"n\">false</span>, severity : Crylog::Severity = <span class=\"t\">Crylog</span><span class=\"t\">::</span><span class=\"t\">Severity</span><span class=\"t\">::</span><span class=\"t\">Debug</span>, bubble : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/io_handler.cr#L7","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"lock","doc":null,"default_value":"false","external_name":"lock","restriction":"Bool"},{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"},{"name":"bubble","doc":null,"default_value":"true","external_name":"bubble","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, lock, severity, bubble)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close:Nil-instance-method","html_id":"close:Nil-instance-method","name":"close","doc":"Closes *io* if it is a `File`.","summary":"<p>Closes <em>io</em> if it is a <code>File</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/io_handler.cr#L27","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (io = @io) && io.is_a?(File)\n  io.closed? || io.close\nend"}},{"id":"write(message:Crylog::Message):Nil-instance-method","html_id":"write(message:Crylog::Message):Nil-instance-method","name":"write","doc":"Writes *message* to the given *io*.","summary":"<p>Writes <em>message</em> to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/io_handler.cr#L12","def":{"name":"write","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if ((io = @io) && io.is_a?(File)) && @lock\n  io.flock_exclusive\nend\n@io.puts(message.formatted)\nif ((io = @io) && io.is_a?(File)) && @lock\n  io.flock_unlock\nend\n@io.flush\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","path":"Crylog/Handlers/LogHandler.html","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/handler.cr","line_number":4,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/NoopHandler","kind":"struct","full_name":"Crylog::Handlers::NoopHandler","name":"NoopHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/NullHandler","kind":"struct","full_name":"Crylog::Handlers::NullHandler","name":"NullHandler"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Base struct of all handlers.","summary":"<p>Base struct of all handlers.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/handler.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Called when the application exits.  Can be used to free up resources used within the handler.\nSuch as closing IOs, finalizing connections, etc.\n\nNOTE: Implementations have to be idempotent.  Loggers sharing the same instance of a handler would be closed more than once.","summary":"<p>Called when the application exits.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/handler.cr#L9","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/NoopHandler","path":"Crylog/Handlers/NoopHandler.html","kind":"struct","full_name":"Crylog::Handlers::NoopHandler","name":"NoopHandler","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/noop_handler.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/noop_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Handles any message but does nothing with it.","summary":"<p>Handles any message but does nothing with it.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"handle(message:Crylog::Message):Bool-instance-method","html_id":"handle(message:Crylog::Message):Bool-instance-method","name":"handle","doc":"Does nothing with *message*.","summary":"<p>Does nothing with <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/noop_handler.cr#L12","def":{"name":"handle","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"handles?(message:Crylog::Message):Bool-instance-method","html_id":"handles?(message:Crylog::Message):Bool-instance-method","name":"handles?","doc":"Handles any *message*.","summary":"<p>Handles any <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/noop_handler.cr#L7","def":{"name":"handles?","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/NullHandler","path":"Crylog/Handlers/NullHandler.html","kind":"struct","full_name":"Crylog::Handlers::NullHandler","name":"NullHandler","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/null_handler.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/null_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Discards all messages it is able to handle.","summary":"<p>Discards all messages it is able to handle.</p>","class_methods":[],"constructors":[{"id":"new(severity:Crylog::Severity=Crylog::Severity::Debug)-class-method","html_id":"new(severity:Crylog::Severity=Crylog::Severity::Debug)-class-method","name":"new","doc":"Initializes a log handler that will handle any message with a severity greater than or equal to *severity*.","summary":"<p>Initializes a log handler that will handle any message with a severity greater than or equal to <em>severity</em>.</p>","abstract":false,"args":[{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"}],"args_string":"(severity : Crylog::Severity = <span class=\"t\">Crylog</span><span class=\"t\">::</span><span class=\"t\">Severity</span><span class=\"t\">::</span><span class=\"t\">Debug</span>)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/null_handler.cr#L7","def":{"name":"new","args":[{"name":"severity","doc":null,"default_value":"Crylog::Severity::Debug","external_name":"severity","restriction":"Crylog::Severity"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(severity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"handle(message:Crylog::Message):Bool-instance-method","html_id":"handle(message:Crylog::Message):Bool-instance-method","name":"handle","doc":"Throws away the given *message*.","summary":"<p>Throws away the given <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/null_handler.cr#L15","def":{"name":"handle","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"message.severity >= @severity"}},{"id":"handles?(message:Crylog::Message):Bool-instance-method","html_id":"handles?(message:Crylog::Message):Bool-instance-method","name":"handles?","doc":"Determines if this handler is able to handle *message*.","summary":"<p>Determines if this handler is able to handle <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/null_handler.cr#L10","def":{"name":"handles?","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"message.severity >= @severity"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","path":"Crylog/Handlers/ProcessingLogHandler.html","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/Processable","kind":"module","full_name":"Crylog::Processors::Processable","name":"Processable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/Formattable","kind":"module","full_name":"Crylog::Formatters::Formattable","name":"Formattable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/processing_handler.cr","line_number":9,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/processing_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/Formattable","kind":"module","full_name":"Crylog::Formatters::Formattable","name":"Formattable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/Processable","kind":"module","full_name":"Crylog::Processors::Processable","name":"Processable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/IOHandler","kind":"struct","full_name":"Crylog::Handlers::IOHandler","name":"IOHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/TestHandler","kind":"struct","full_name":"Crylog::Handlers::TestHandler","name":"TestHandler"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Base struct implementing support for handler specific processors and formatter.\n\nMost handlers can inherit from this and implement `#write`.","summary":"<p>Base struct implementing support for handler specific processors and formatter.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"handle(message:Crylog::Message):Bool-instance-method","html_id":"handle(message:Crylog::Message):Bool-instance-method","name":"handle","doc":"Handles a logged message.\n\nResponsible for returning early if `self` should not handle *message*.\nRuns `self`'s processors, formats, then writes *message*.","summary":"<p>Handles a logged message.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/processing_handler.cr#L20","def":{"name":"handle","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if self.handles?(message)\nelse\n  return false\nend\n@processors.each(&.call(message))\nmessage.formatted = formatter.call(message)\nwrite(message)\n!@bubble\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/TestHandler","path":"Crylog/Handlers/TestHandler.html","kind":"struct","full_name":"Crylog::Handlers::TestHandler","name":"TestHandler","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/Processable","kind":"module","full_name":"Crylog::Processors::Processable","name":"Processable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Formatters/Formattable","kind":"module","full_name":"Crylog::Formatters::Formattable","name":"Formattable"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/AbstractLogHandler","kind":"struct","full_name":"Crylog::Handlers::AbstractLogHandler","name":"AbstractLogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/LogHandler","kind":"struct","full_name":"Crylog::Handlers::LogHandler","name":"LogHandler"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handlers/test_handler.cr","line_number":7,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/test_handler.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers","kind":"module","full_name":"Crylog::Handlers","name":"Handlers"},"doc":"Keeps a record of all messages logged.  Most useful for testing.\n\nUsed internaly to test `Crylog::Handlers::ProcessingLogHandler` and `Crylog::Handlers::AbstractLogProcessor`.","summary":"<p>Keeps a record of all messages logged.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"messages:Array(Crylog::Message)-instance-method","html_id":"messages:Array(Crylog::Message)-instance-method","name":"messages","doc":"Array of messages handled by `self`.","summary":"<p>Array of messages handled by <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Crylog::Message)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/test_handler.cr#L11","def":{"name":"messages","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Crylog::Message)","visibility":"Public","body":"@messages"}},{"id":"write(message:Crylog::Message):Nil-instance-method","html_id":"write(message:Crylog::Message):Nil-instance-method","name":"write","doc":"Adds *message* to the array of handled messages.","summary":"<p>Adds <em>message</em> to the array of handled messages.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/handlers/test_handler.cr#L12","def":{"name":"write","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@messages << message"}}],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/LogContext","path":"Crylog/LogContext.html","kind":"alias","full_name":"Crylog::LogContext","name":"LogContext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crylog.cr","line_number":24,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/crylog.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":true,"aliased":"Hash(String, Crylog::Context)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Convenience alias for creating `Crylog::Message#context` and `Crylog::Message#extra` hashes.\n\n```\nmessage.extra[\"data\"] = Crylog::LogContext{\"key\" => \"value\"}\n```","summary":"<p>Convenience alias for creating <code><a href=\"../Crylog/Message.html#context:Hash(String,Crylog::Context)-instance-method\">Crylog::Message#context</a></code> and <code><a href=\"../Crylog/Message.html#extra:Hash(String,Crylog::Context)-instance-method\">Crylog::Message#extra</a></code> hashes.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Logger","path":"Crylog/Logger.html","kind":"struct","full_name":"Crylog::Logger","name":"Logger","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"logger.cr","line_number":53,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"A logger instance.","summary":"<p>A logger instance.</p>","class_methods":[],"constructors":[{"id":"new(channel:String)-class-method","html_id":"new(channel:String)-class-method","name":"new","doc":"Creates a new `Logger` with the provided *channel*.","summary":"<p>Creates a new <code><a href=\"../Crylog/Logger.html\">Logger</a></code> with the provided <em>channel</em>.</p>","abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"args_string":"(channel : String)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L76","def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alert(&block:->Crylog::MsgType):Nil-instance-method","html_id":"alert(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"alert","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Alert` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Alert\">Crylog::Severity::Alert</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"alert","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Alert, &block)"}},{"id":"alert(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"alert(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"alert","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Alert` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Alert\">Crylog::Severity::Alert</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"alert","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"alert do\n  {message.to_s, context}\nend"}},{"id":"channel:String-instance-method","html_id":"channel:String-instance-method","name":"channel","doc":"The channel `self` belongs to.","summary":"<p>The channel <code>self</code> belongs to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L63","def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@channel"}},{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Closes each handler defined on `self`.","summary":"<p>Closes each handler defined on <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L79","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handlers.each(&.close)"}},{"id":"critical(&block:->Crylog::MsgType):Nil-instance-method","html_id":"critical(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"critical","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"critical","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Critical, &block)"}},{"id":"critical(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"critical(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"critical","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Critical` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Critical\">Crylog::Severity::Critical</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"critical","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"critical do\n  {message.to_s, context}\nend"}},{"id":"debug(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"debug(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"debug","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"debug","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"debug do\n  {message.to_s, context}\nend"}},{"id":"debug(&block:->Crylog::MsgType):Nil-instance-method","html_id":"debug(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"debug","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Debug` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Debug\">Crylog::Severity::Debug</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"debug","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Debug, &block)"}},{"id":"emergency(&block:->Crylog::MsgType):Nil-instance-method","html_id":"emergency(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"emergency","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Emergency` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Emergency\">Crylog::Severity::Emergency</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"emergency","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Emergency, &block)"}},{"id":"emergency(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"emergency(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"emergency","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Emergency` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Emergency\">Crylog::Severity::Emergency</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"emergency","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"emergency do\n  {message.to_s, context}\nend"}},{"id":"error(&block:->Crylog::MsgType):Nil-instance-method","html_id":"error(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"error","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Error` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Error\">Crylog::Severity::Error</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Error, &block)"}},{"id":"error(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"error(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"error","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Error` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Error\">Crylog::Severity::Error</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"error do\n  {message.to_s, context}\nend"}},{"id":"handlers:Array(Crylog::Handlers::LogHandler)-instance-method","html_id":"handlers:Array(Crylog::Handlers::LogHandler)-instance-method","name":"handlers","doc":"The handlers registered on `self`.","summary":"<p>The handlers registered on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Crylog::Handlers::LogHandler)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L57","def":{"name":"handlers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Crylog::Handlers::LogHandler)","visibility":"Public","body":"@handlers"}},{"id":"handlers=(handlers:Array(Crylog::Handlers::LogHandler)):self-instance-method","html_id":"handlers=(handlers:Array(Crylog::Handlers::LogHandler)):self-instance-method","name":"handlers=","doc":"Sets the handlers to use for `self`.","summary":"<p>Sets the handlers to use for <code>self</code>.</p>","abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Array(Crylog::Handlers::LogHandler)"}],"args_string":"(handlers : Array(Crylog::Handlers::LogHandler)) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L64","def":{"name":"handlers=","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Array(Crylog::Handlers::LogHandler)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@handlers = handlers\nself\n"}},{"id":"info(&block:->Crylog::MsgType):Nil-instance-method","html_id":"info(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"info","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Info` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Info\">Crylog::Severity::Info</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"info","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Info, &block)"}},{"id":"info(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"info(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"info","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Info` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Info\">Crylog::Severity::Info</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"info do\n  {message.to_s, context}\nend"}},{"id":"notice(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"notice(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"notice","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Notice` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Notice\">Crylog::Severity::Notice</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"notice","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"notice do\n  {message.to_s, context}\nend"}},{"id":"notice(&block:->Crylog::MsgType):Nil-instance-method","html_id":"notice(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"notice","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Notice` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Notice\">Crylog::Severity::Notice</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"notice","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Notice, &block)"}},{"id":"processors:Array(Crylog::Processors::LogProcessors)-instance-method","html_id":"processors:Array(Crylog::Processors::LogProcessors)-instance-method","name":"processors","doc":"Processors registered on `self`.","summary":"<p>Processors registered on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Crylog::Processors::LogProcessors)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L60","def":{"name":"processors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Crylog::Processors::LogProcessors)","visibility":"Public","body":"@processors"}},{"id":"processors=(processors:Array(Crylog::Processors::LogProcessors)):self-instance-method","html_id":"processors=(processors:Array(Crylog::Processors::LogProcessors)):self-instance-method","name":"processors=","doc":"Sets the processors to use for `self`.","summary":"<p>Sets the processors to use for <code>self</code>.</p>","abstract":false,"args":[{"name":"processors","doc":null,"default_value":"","external_name":"processors","restriction":"Array(Crylog::Processors::LogProcessors)"}],"args_string":"(processors : Array(Crylog::Processors::LogProcessors)) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L70","def":{"name":"processors=","args":[{"name":"processors","doc":null,"default_value":"","external_name":"processors","restriction":"Array(Crylog::Processors::LogProcessors)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@processors = processors\nself\n"}},{"id":"warning(message,context:Crylog::LogContext?=nil):Nil-instance-method","html_id":"warning(message,context:Crylog::LogContext?=nil):Nil-instance-method","name":"warning","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"args_string":"(message, context : Crylog::LogContext? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"warning","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Crylog::LogContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"warning do\n  {message.to_s, context}\nend"}},{"id":"warning(&block:->Crylog::MsgType):Nil-instance-method","html_id":"warning(&amp;block:-&gt;Crylog::MsgType):Nil-instance-method","name":"warning","doc":"Logs *message* and optionally *context* with `Crylog::Severity::Warning` severity.\nBlock is only evaluated if the message is logged.","summary":"<p>Logs <em>message</em> and optionally <em>context</em> with <code><a href=\"../Crylog/Severity.html#Warning\">Crylog::Severity::Warning</a></code> severity.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Crylog::MsgType) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L83","def":{"name":"warning","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"Nil","visibility":"Public","body":"log(Crylog::Severity::Warning, &block)"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Message","path":"Crylog/Message.html","kind":"class","full_name":"Crylog::Message","name":"Message","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"github.com/Blacksmoke16/crylog/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"message.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Blacksmoke16/crylog/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Represents a logged message and its metadata.","summary":"<p>Represents a logged message and its metadata.</p>","class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L6","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new(severity:Crylog::Severity,channel:String,&block:->Crylog::MsgType)-class-method","html_id":"new(severity:Crylog::Severity,channel:String,&amp;block:-&gt;Crylog::MsgType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":"Crylog::Severity"},{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"args_string":"(severity : Crylog::Severity, channel : String, &block :  -> Crylog::MsgType)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L35","def":{"name":"new","args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":"Crylog::Severity"},{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Crylog::MsgType)"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(severity, channel, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel:String-instance-method","html_id":"channel:String-instance-method","name":"channel","doc":"What channel the messaged was logged to.","summary":"<p>What channel the messaged was logged to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L16","def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@channel"}},{"id":"context:Hash(String,Crylog::Context)-instance-method","html_id":"context:Hash(String,Crylog::Context)-instance-method","name":"context","doc":"Any extra metadata added when the message was logged.","summary":"<p>Any extra metadata added when the message was logged.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Crylog::Context)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L47","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Crylog::Context)","visibility":"Public","body":"set_message_context\n@context.not_nil!\n"}},{"id":"context?:Bool-instance-method","html_id":"context?:Bool-instance-method","name":"context?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L62","def":{"name":"context?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"set_message_context\nif ctx = @context\nelse\n  return false\nend\n!ctx.empty?\n"}},{"id":"datetime:Time-instance-method","html_id":"datetime:Time-instance-method","name":"datetime","doc":"When the message was logged.","summary":"<p>When the message was logged.</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L19","def":{"name":"datetime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@datetime"}},{"id":"extra:Hash(String,Crylog::Context)-instance-method","html_id":"extra:Hash(String,Crylog::Context)-instance-method","name":"extra","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Crylog::Context)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L52","def":{"name":"extra","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Crylog::Context)","visibility":"Public","body":"@extra || (@extra = Hash(String, Crylog::Context).new)"}},{"id":"extra=(extra:Hash(String,Crylog::Context)?)-instance-method","html_id":"extra=(extra:Hash(String,Crylog::Context)?)-instance-method","name":"extra=","doc":"Any extra metadata added by a `Crylog::Processors::LogProcessor`.","summary":"<p>Any extra metadata added by a <code><a href=\"../Crylog/Processors/LogProcessor.html\">Crylog::Processors::LogProcessor</a></code>.</p>","abstract":false,"args":[{"name":"extra","doc":null,"default_value":"","external_name":"extra","restriction":"Hash(String, Crylog::Context) | ::Nil"}],"args_string":"(extra : Hash(String, Crylog::Context)?)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L22","def":{"name":"extra=","args":[{"name":"extra","doc":null,"default_value":"","external_name":"extra","restriction":"Hash(String, Crylog::Context) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@extra = extra"}},{"id":"extra?:Bool-instance-method","html_id":"extra?:Bool-instance-method","name":"extra?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L68","def":{"name":"extra?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if ext = @extra\nelse\n  return false\nend\n!ext.empty?\n"}},{"id":"formatted:String-instance-method","html_id":"formatted:String-instance-method","name":"formatted","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L28","def":{"name":"formatted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@formatted"}},{"id":"formatted=(formatted:String)-instance-method","html_id":"formatted=(formatted:String)-instance-method","name":"formatted=","doc":null,"summary":null,"abstract":false,"args":[{"name":"formatted","doc":null,"default_value":"","external_name":"formatted","restriction":"String"}],"args_string":"(formatted : String)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L32","def":{"name":"formatted=","args":[{"name":"formatted","doc":null,"default_value":"","external_name":"formatted","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatted = formatted"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"The message that was logged.","summary":"<p>The message that was logged.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L41","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"set_message_context\n@message.not_nil!\n"}},{"id":"message?:Bool-instance-method","html_id":"message?:Bool-instance-method","name":"message?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L56","def":{"name":"message?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"set_message_context\nif msg = @message\nelse\n  return false\nend\n!msg.empty?\n"}},{"id":"severity:Severity-instance-method","html_id":"severity:Severity-instance-method","name":"severity","doc":"The severity level of the logged message.","summary":"<p>The severity level of the logged message.</p>","abstract":false,"args":[],"args_string":" : Severity","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L13","def":{"name":"severity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Severity","visibility":"Public","body":"@severity"}},{"id":"to_json(builder:JSON::Builder)-instance-method","html_id":"to_json(builder:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/message.cr#L93","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_message_context\nsuper(builder)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors","path":"Crylog/Processors.html","kind":"module","full_name":"Crylog::Processors","name":"Processors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"processors/processable.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processable.cr"},{"filename":"processors/processor.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processor.cr"},{"filename":"processors/git_processor.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/git_processor.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Adds metadata to each logged message.","summary":"<p>Adds metadata to each logged message.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/GitProcessor","path":"Crylog/Processors/GitProcessor.html","kind":"struct","full_name":"Crylog::Processors::GitProcessor","name":"GitProcessor","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/LogProcessor","kind":"struct","full_name":"Crylog::Processors::LogProcessor","name":"LogProcessor"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/LogProcessor","kind":"struct","full_name":"Crylog::Processors::LogProcessor","name":"LogProcessor"},{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"processors/git_processor.cr","line_number":5,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/git_processor.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors","kind":"module","full_name":"Crylog::Processors","name":"Processors"},"doc":"Includes the Git branch and SHA commit hash in all logged messages.","summary":"<p>Includes the Git branch and SHA commit hash in all logged messages.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"call(message:Crylog::Message):Nil-instance-method","html_id":"call(message:Crylog::Message):Nil-instance-method","name":"call","doc":"Adds metadata to *message*.","summary":"<p>Adds metadata to <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/git_processor.cr#L7","def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"current_branch = `git branch -v --no-abbrev`\ngit_info = current_branch.match(/^\\* (.+?)\\s+([a-f0-9]{40})(?:\\s|$)/m)\nif git_info\nelse\n  return\nend\nmessage.extra[\"git\"] = Crylog::LogContext {\"branch\" => git_info[1]?, \"commit\" => git_info[2]?}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/LogProcessor","path":"Crylog/Processors/LogProcessor.html","kind":"struct","full_name":"Crylog::Processors::LogProcessor","name":"LogProcessor","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"processors/processor.cr","line_number":6,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processor.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/GitProcessor","kind":"struct","full_name":"Crylog::Processors::GitProcessor","name":"GitProcessor"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors","kind":"module","full_name":"Crylog::Processors","name":"Processors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processor.cr#L6","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"call(message:Crylog::Message):Nil-instance-method","html_id":"call(message:Crylog::Message):Nil-instance-method","name":"call","doc":"Adds metadata to *message*.","summary":"<p>Adds metadata to <em>message</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"args_string":"(message : Crylog::Message) : Nil","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processor.cr#L8","def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Crylog::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/LogProcessors","path":"Crylog/Processors/LogProcessors.html","kind":"alias","full_name":"Crylog::Processors::LogProcessors","name":"LogProcessors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"processors/processor.cr","line_number":4,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processor.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":true,"aliased":"(Crylog::Processors::LogProcessor | Proc(Crylog::Message, Nil))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors","kind":"module","full_name":"Crylog::Processors","name":"Processors"},"doc":"The possible types of a Processor.","summary":"<p>The possible types of a Processor.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors/Processable","path":"Crylog/Processors/Processable.html","kind":"module","full_name":"Crylog::Processors::Processable","name":"Processable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"processors/processable.cr","line_number":2,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processable.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Handlers/ProcessingLogHandler","kind":"struct","full_name":"Crylog::Handlers::ProcessingLogHandler","name":"ProcessingLogHandler"}],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Processors","kind":"module","full_name":"Crylog::Processors","name":"Processors"},"doc":"Represents handlers that can have handler specific processors.","summary":"<p>Represents handlers that can have handler specific processors.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"processors:Array(Crylog::Processors::LogProcessors)-instance-method","html_id":"processors:Array(Crylog::Processors::LogProcessors)-instance-method","name":"processors","doc":"The processors specific to a given handler.","summary":"<p>The processors specific to a given handler.</p>","abstract":false,"args":[],"args_string":" : Array(Crylog::Processors::LogProcessors)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/processors/processable.cr#L6","def":{"name":"processors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Crylog::Processors::LogProcessors)","visibility":"Public","body":"@processors"}}],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Registry","path":"Crylog/Registry.html","kind":"struct","full_name":"Crylog::Registry","name":"Registry","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"registry.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Stores the loggers registered with `Crylog`.","summary":"<p>Stores the loggers registered with <code><a href=\"../Crylog.html\">Crylog</a></code>.</p>","class_methods":[{"id":"clear:Hash(String,Crylog::Logger)-class-method","html_id":"clear:Hash(String,Crylog::Logger)-class-method","name":"clear","doc":"Clears the registry.","summary":"<p>Clears the registry.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Crylog::Logger)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr#L13","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Crylog::Logger)","visibility":"Public","body":"@@loggers.clear"}},{"id":"close-class-method","html_id":"close-class-method","name":"close","doc":"Closes all handlers on each logger.","summary":"<p>Closes all handlers on each logger.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr#L18","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@loggers.values.each(&.close)\n@@loggers.clear\n"}},{"id":"loggers:Hash(String,Crylog::Logger)-class-method","html_id":"loggers:Hash(String,Crylog::Logger)-class-method","name":"loggers","doc":"Hash of registered loggers.","summary":"<p>Hash of registered loggers.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Crylog::Logger)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr#L7","def":{"name":"loggers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Crylog::Logger)","visibility":"Public","body":"@@loggers"}},{"id":"register(channel:String,&block:Crylog::Logger->Crylog::Logger)-class-method","html_id":"register(channel:String,&amp;block:Crylog::Logger-&gt;Crylog::Logger)-class-method","name":"register","doc":"Yields a new `Crylog::Logger` with *channel* yields to *&block*.  Then registers the resulting `Crylog::Logger`.","summary":"<p>Yields a new <code><a href=\"../Crylog/Logger.html\">Crylog::Logger</a></code> with <em>channel</em> yields to <em>&block</em>.</p>","abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"args_string":"(channel : String, &block : Crylog::Logger -> Crylog::Logger)","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr#L8","def":{"name":"register","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crylog::Logger -> Crylog::Logger)"},"return_type":"","visibility":"Public","body":"@@loggers[channel] = yield Crylog::Logger.new(channel)"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/registry.cr#L3","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/crylog/Crylog/Severity","path":"Crylog/Severity.html","kind":"enum","full_name":"Crylog::Severity","name":"Severity","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/Blacksmoke16/crylog/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/Blacksmoke16/crylog/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/Blacksmoke16/crylog/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/crylog/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"logger.cr","line_number":3,"url":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr"}],"repository_name":"github.com/Blacksmoke16/crylog","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Debug","name":"Debug","value":"100","doc":"Detailed debugging information.","summary":"<p>Detailed debugging information.</p>"},{"id":"Info","name":"Info","value":"200","doc":"Interesting events.\n\nExamples: User logs in, SQL logs.","summary":"<p>Interesting events.</p>"},{"id":"Notice","name":"Notice","value":"250","doc":"Uncommon events.","summary":"<p>Uncommon events.</p>"},{"id":"Warning","name":"Warning","value":"300","doc":"Exceptional occurrences that are not errors.\n\nExamples: Use of deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong.","summary":"<p>Exceptional occurrences that are not errors.</p>"},{"id":"Error","name":"Error","value":"400","doc":"Runtime errors.","summary":"<p>Runtime errors.</p>"},{"id":"Critical","name":"Critical","value":"500","doc":"Critical conditions.\n\nExample: Application component unavailable, unexpected exception.","summary":"<p>Critical conditions.</p>"},{"id":"Alert","name":"Alert","value":"550","doc":"Action must be taken immediately.\n\nExample: Entire website down, database unavailable, etc.\nThis should trigger the SMS alerts and wake you up.","summary":"<p>Action must be taken immediately.</p>"},{"id":"Emergency","name":"Emergency","value":"600","doc":"Urgent alert.","summary":"<p>Urgent alert.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/crylog/Crylog","kind":"module","full_name":"Crylog","name":"Crylog"},"doc":"Logging levels as defined by [RFC 5424](https://tools.ietf.org/html/rfc5424#section-6.2.1).","summary":"<p>Logging levels as defined by <a href=\"https://tools.ietf.org/html/rfc5424#section-6.2.1\" target=\"_blank\">RFC 5424</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"alert?-instance-method","html_id":"alert?-instance-method","name":"alert?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L32","def":{"name":"alert?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Alert"}},{"id":"critical?-instance-method","html_id":"critical?-instance-method","name":"critical?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L26","def":{"name":"critical?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Critical"}},{"id":"debug?-instance-method","html_id":"debug?-instance-method","name":"debug?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L5","def":{"name":"debug?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Debug"}},{"id":"emergency?-instance-method","html_id":"emergency?-instance-method","name":"emergency?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L35","def":{"name":"emergency?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Emergency"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L21","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"info?-instance-method","html_id":"info?-instance-method","name":"info?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L10","def":{"name":"info?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Info"}},{"id":"notice?-instance-method","html_id":"notice?-instance-method","name":"notice?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L13","def":{"name":"notice?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Notice"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code>String</code> representation of this enum member.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L37","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nwhen .debug?\n  \"DEBUG\"\nwhen .info?\n  \"INFO\"\nwhen .notice?\n  \"NOTICE\"\nwhen .warning?\n  \"WARNING\"\nwhen .error?\n  \"ERROR\"\nwhen .critical?\n  \"CRITICAL\"\nwhen .alert?\n  \"ALERT\"\nwhen .emergency?\n  \"EMERGENCY\"\nelse\n  raise(\"unknown #{super()}\")\nend"}},{"id":"warning?-instance-method","html_id":"warning?-instance-method","name":"warning?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/crylog/blob/32cbecf4575883aa5dcd8c4877b0047f288dac6c/src/logger.cr#L18","def":{"name":"warning?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Warning"}}],"macros":[],"types":[]}]}]}}